volumes:
  # nginx_proxy_manager_data:
  # letsencrypt:
  mysql:

services:
  backend:
    build:
      context: ../app/backend
      dockerfile: ../../.build/backend/Dockerfile # Adjusted to be relative to the context
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:3000/api/v1/healthCheck/status"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST_MYSQL: ${HOST_MYSQL}
      PORT_MYSQL: ${PORT_MYSQL}
      USER_MYSQL: ${USER_MYSQL}
      PASSWORD_MYSQL: ${PASSWORD_MYSQL}
      DATABASE_MYSQL: ${DATABASE_MYSQL}
      HASH_SALT: ${HASH_SALT}
      JWT_SECRET: ${JWT_SECRET}
      PASSPORT_SECRET: ${PASSPORT_SECRET}
      TZ: Asia/Ho_Chi_Minh
    ports:
      - "${PORT:-3005}:3000"
    depends_on:
      - mysql_db

  mysql_db:
    build:
      context: ../.build/mysql
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD_MYSQL}
      MYSQL_DATABASE: ${DATABASE_MYSQL}
      TZ: Asia/Ho_Chi_Minh
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD-SHELL", "sh", "-c", "../.build/mysql/wait-for-mysql.sh"]
      interval: 5s
      timeout: 30s
      retries: 3

  # frontend:
  #   build:
  #     dockerfile: ./.build/frontend/Dockerfile
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 15s
