name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [opened, closed]

jobs:
  build-and-test:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for FE
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify your Node.js version

      - name: Install FE dependencies
        working-directory: ./app/frontend  # Change to your front-end directory
        run: npm install

      - name: Build FE
        working-directory: ./app/frontend # Change to your front-end directory
        run: npm run build  # Change to your build command if different

      # - name: Run FE tests
      #   working-directory: ./app/frontend  # Change to your front-end directory
      #   run: npm run test  # Change to your test command if different

      - name: Set up Node.js for BE
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify your Node.js version

      - name: Install BE dependencies
        working-directory: ./app/backend  # Change to your back-end directory
        run: npm install

      - name: Build BE
        working-directory: ./app/backend  # Change to your back-end directory
        run: npm run build  # Change to your build command if different

      - name: Run BE tests
        working-directory: ./app/backend  # Change to your back-end directory
        run: npm run test  # Change to your test command if different

  deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test SSH Connection
        run: |
          echo "REMOTE_HOST: ${{ secrets.REMOTE_HOST }}"
          echo "REMOTE_USER: ${{ secrets.REMOTE_USER }}"
          echo "SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}"
          echo "SSH_PORT: ${{ secrets.SSH_PORT }}"

      - name: Deploy to Remote Host using Docker
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}  # Specify your SSH port here
          # host: 115.73.215.28
          # username: pcs
          # password: 123456
          # port: 8002  # Specify your SSH port here
          script: |
            cd cmsweb-v2/  # Change to your application directory on the remote host
            git pull origin main  # Pull latest changes
            docker compose -f .deploy/docker-compose.dev.yaml down
            docker compose -f .deploy/docker-compose.dev.yaml up -d --build
            docker image prune -f  # clean up none image after built